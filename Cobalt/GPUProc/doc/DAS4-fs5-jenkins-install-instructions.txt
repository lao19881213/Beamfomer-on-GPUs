Used installation commands
==========================

Keep the latest version of this file in the LOFAR repos under LOFAR/RTCP/Cobalt/GPUProc/doc


Environment
-----------

* We assume the following 'loaded modules' (e.g. through .bashrc):
  module load gcc    # default on DAS-4
  module load sge    # idem
  module load fftw3/gcc/64
  module load openmpi/gcc/64
  module load cuda55/toolkit
  module load cuda55/fft
  module load hwloc
  (If the jenkins system is in control (JENKINS_SERVER_COOKIE has a value),
   we set modules and PATH-like env vars in the jenkins build/test scripts.) 
* We assume PATH contains $HOME/root/bin
  and LD_LIBRARY_PATH contains $HOME/root/lib
  and PYTHONPATH contains $HOME/root/lib64/python2.6/site-packages

* Always pass at least -DCMAKE_INSTALL_PREFIX=$HOME/root to cmake, or --prefix=$HOME/root to ./configure.
* Make sure everything is linked using the same library versions (esp. for libhdf5).


Relevant files and directories
------------------------------

$HOME/root/			installation root
$HOME/root/src/			source and build directories
$HOME/root/share/aips++/data/	CASA measures table location
$HOME/jenkins/			location of the jenkins continuous build and integration system


log4cplus (easier to install using your OS' package manager)
---------

Dependency for: LOFAR

  cd $HOME/root/src
  wget http://downloads.sourceforge.net/project/log4cplus/log4cplus-stable/1.1.1/log4cplus-1.1.1.tar.gz   # or whatever recent version you like
  tar zxf log4cplus-1.1.1.tar.gz
  cd log4cplus-1.1.1
  ./configure --prefix=$HOME/root
  make -j 8 install
  make check  # optional


libssh2 (easier to install using your OS' package manager)
-------

Dependency for: LOFAR

  cd $HOME/root/src
  wget http://www.libssh2.org/download/libssh2-1.4.3.tar.gz   # or whatever recent version you like
  tar zxf libssh2-1.4.3.tar.gz
  cd libssh2-1.4.3
  ./configure --prefix=$HOME/root
  make -j 8 install
  make check  # optional


cfitsio (easier to install using your OS' package manager)
-------

Dependency for: casacore, wcslib

  cd $HOME/root/src
  wget ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio_latest.tar.gz
  tar zxf cfitsio_latest.tar.gz
  cd cfitsio
  ./configure --prefix=$HOME/root --enable-reentrant --enable-sse2 --enable-ssse3
  make -j 8 shared
  make install


wcslib (easier to install using your OS' package manager)
------

Dependency for: casacore

  cd $HOME/root/src
  wget ftp://ftp.atnf.csiro.au/pub/software/wcslib/wcslib.tar.bz2
  tar jxf wcslib.tar.bz2
  cd wcslib-4.18    # or whatever version you have
  ./configure --prefix=$HOME/root --with-cfitsiolib=$HOME/root/lib --with-cfitsioinc=$HOME/root/include
  make -j 8 install


CASA measures tables
--------------------

Dependency for: casacore (keep the measure tables up to date, automatically!)

  cd $HOME/root/share    # or wherever
  mkdir aips++
  cd aips++
  wget ftp://ftp.atnf.csiro.au/pub/software/measures_data/measures_data.tar.bz2 ftp://ftp.atnf.csiro.au/pub/software/measures_data/measures_data.tar.bz2.md5sum
  md5sum measures_data.tar.bz2    # verify that md5 hash is equal to hash in measures_data.tar.bz2.md5sum (if you automate it, note that the .md5sum file contains a CSIRO full path name)
  tar jxf measures_data.tar.bz2

  # Now, add updating it to a cron or jenkins job


casacore
--------

Dependency for: LOFAR/RTCP/Cobalt

Since we keep the measure data up to date (and since this install is the testing env standard), 
we use -DDATA_DIR=..., such that others can use our install AND measures tables.

  cd $HOME/root/src
  svn co http://casacore.googlecode.com/svn/trunk/ casacore
  mkdir casacore/build
  cd casacore/build
  cmake -DCMAKE_INSTALL_PREFIX=$HOME/root -DUSE_HDF5=ON -DUSE_FFTW3=ON -DFFTW3_DISABLE_THREADS=OFF -DUSE_THREADS=ON -DUSE_OPENMP=ON -DDATA_DIR=/home/jenkins/root/share/casacore/data ..  # don't use ~ or $HOME in -DDATA_DIR to allow using jenkins' measures tables for any user
  #cmake -DCMAKE_INSTALL_PREFIX=$HOME/root -DUSE_HDF5=ON -DUSE_FFTW3=ON -DFFTW3_DISABLE_THREADS=OFF -DUSE_THREADS=ON -DUSE_OPENMP=ON -DDATA_DIR=/localhome/lofarsystem/casacore/data ..  # use another DATA_DIR for the Cobalt nodes
  make -j 8 install
  ctest    # optional

  findmeastable    # optional; verify that casacore can find the measures tables


casarest (not needed for LOFAR Cobalt)
--------

Dependency for: LOFAR Calibration package, maybe others

  cd $HOME/root/src
  svn co https://svn.astron.nl/casarest/trunk/casarest
  mkdir casarest/build
  cd casarest/build
  cmake -DCMAKE_INSTALL_PREFIX=$HOME/root -DCASACORE_ROOT_DIR=$HOME/root -DLIB_EXTRA_SYNTHESIS=gfortran -DBUILD_ALL=1 ..  # if you need ALL...
  # On DAS-4 casarest r8758, 'make' searches for a boost lib in /usr/lib64/lib64. Patch that away.
  # grep -r -l lib64/lib64 * | xargs sed -i -e 's/lib64\/lib64/lib64\//g'
  make -j 8 install


pyrap (optional for LOFAR Cobalt)
-----

Dependency for: various LOFAR/CEP packages
Depends on: python boost-python casacore numpy scons

  cd $HOME/root/src
  svn co http://pyrap.googlecode.com/svn/trunk pyrap
  cd pyrap
  ./batchbuild-trunk.py --casacore-root=$HOME/root --enable-hdf5 --cfitsio-root=$HOME/root --wcs-root=$HOME/root --prefix=$HOME/root --python-prefix=$HOME/root/lib64/python2.6/site-packages
  python -c 'import pyrap'  # optional (test), should print nothing and exit 0


blitz++ (easier to install using your OS' package manager, not needed for LOFAR Cobalt)
-------

Dependency for: some LOFAR MAC packages

  cd $HOME/root/src
  wget http://sourceforge.net/projects/blitz/files/blitz/Blitz%2B%2B%200.10/blitz-0.10.tar.gz  # or whatever recent version you like
  tar zxf blitz-0.10.tar.gz
  cd blitz-0.10
  ./configure --prefix=$HOME/root --enable-shared --enable-optimize
  make -j 8 install


valgrind (easier to install using your OS' package manager; optional for LOFAR Cobalt)
--------

Dependency for: running LOFAR tests under valgrind

  cd $HOME/root/src
  wget http://valgrind.org/downloads/valgrind-3.8.1.tar.bz2  # or whatever version you like
  tar jxf valgrind-3.8.1.tar.bz2
  cd valgrind-3.8.1
  ./configure --prefix=$HOME/root
  make -j 8 install
  valgrind ls -l   # optional (test), should exit 0


Data Access Library (DAL)
-------------------------

Dependency for: LOFAR/RTCP/Cobalt/OutputProc

  cd $HOME/root/src
  git clone https://github.com/nextgen-astrodata/DAL.git DAL
  mkdir DAL/build
  cd DAL/build
  cmake -DCMAKE_INSTALL_PREFIX=$HOME/root ..
  make -j 8 install
  ctest    # optional
  python -c 'import dal'  # optional (test), should print nothing and exit 0


LOFAR (Cobalt only)
-------------------

  cd $HOME/root/src
  svn co --username USERNAME -N https://svn.astron.nl/LOFAR/trunk LOFAR
  cd LOFAR
  svn up CMake  # cmake will fetch what is needed
  cd .. 
  mkdir -p LOFAR-build/gnu_opt
  cd LOFAR-build/gnu_opt
  cmake -DCMAKE_INSTALL_PREFIX=$HOME/root -DBUILD_PACKAGES="Cobalt StaticMetaData" -DUSE_CUDA=ON -DUSE_OPENMP=ON -DUSE_MPI=ON ../../LOFAR  # assumes you have all deps installed and a LOFAR/CMake/variants/variants.<hostname> file is in place
  make -j 8 install
  ctest -j 8    # optional
  . $HOME/root/lofarinit.sh    # required to use some of the LOFAR tools, but we will do this through jenkins

